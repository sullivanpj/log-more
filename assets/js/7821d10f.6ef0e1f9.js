"use strict";(globalThis.webpackChunklog_right=globalThis.webpackChunklog_right||[]).push([[5186],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>u});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var g=a.createContext({}),p=function(t){var e=a.useContext(g),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},d=function(t){var e=p(t.components);return a.createElement(g.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,g=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=p(r),u=n,h=c["".concat(g,".").concat(u)]||c[u]||s[u]||l;return r?a.createElement(h,o(o({ref:e},d),{},{components:r})):a.createElement(h,o({ref:e},d))}));function u(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var g in e)hasOwnProperty.call(e,g)&&(i[g]=e[g]);i.originalType=t,i.mdxType="string"==typeof t?t:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6948:(t,e,r)=>{r.r(e),r.d(e,{frontMatter:()=>l,contentTitle:()=>o,metadata:()=>i,toc:()=>g,default:()=>d});var a=r(7462),n=(r(7294),r(3905));const l={id:"log-right",title:"log-right package",hide_title:!0},o=void 0,i={unversionedId:"log-right",id:"log-right",title:"log-right package",description:"log-right package",source:"@site/docs/log-right.md",sourceDirName:".",slug:"/log-right",permalink:"/log-right/docs/log-right",editUrl:"https://github.com/sullivanpj/log-right/tree/main/apps/docs/docs/log-right.md",tags:[],version:"current",frontMatter:{id:"log-right",title:"log-right package",hide_title:!0},sidebar:"docsSidebar",next:{title:"base package",permalink:"/log-right/docs/base"}},g=[{value:"log-right package",id:"log-right-package",children:[],level:2},{value:"Classes",id:"classes",children:[],level:2},{value:"Interfaces",id:"interfaces",children:[],level:2},{value:"Variables",id:"variables",children:[],level:2},{value:"Type Aliases",id:"type-aliases",children:[],level:2}],p={toc:g};function d(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"log-right-package"},"log-right package"),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Class"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.configurationmanager"},"ConfigurationManager")),(0,n.kt)("td",{parentName:"tr",align:null},"A static class used to manage the log-right configuration data")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.result"},"Result")),(0,n.kt)("td",{parentName:"tr",align:null},"A class used to handle the result of a function call or sub-process. Functions/process should return back this object so that the calling function can evaluate it's success.")))),(0,n.kt)("h2",{id:"interfaces"},"Interfaces"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Interface"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.reportconfig"},"ReportConfig")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"Report")," configuration parameters to be applied to a specific event type")))),(0,n.kt)("h2",{id:"variables"},"Variables"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Variable"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.defaultlogeventconfig"},"DefaultLogEventConfig")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.defaultlogrightconfig"},"DefaultLogRightConfig")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.format"},"format")),(0,n.kt)("td",{parentName:"tr",align:null},"A helper function that will handle converting the ",(0,n.kt)("code",null,"Result")," objects returned from a failed process into a ",(0,n.kt)("code",null,"Report"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.iserror"},"isError")),(0,n.kt)("td",{parentName:"tr",align:null},"Check a ",(0,n.kt)("code",null,"Result")," object's severity to determine if it should be treated as an error")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.isreportable"},"isReportable")),(0,n.kt)("td",{parentName:"tr",align:null},"Check a ",(0,n.kt)("code",null,"Result")," object's severity to determine if it should be reported")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.isresult"},"isResult")),(0,n.kt)("td",{parentName:"tr",align:null},"A type-check function to verify if the passed in field is a ",(0,n.kt)("code",null,"Result")," object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.report"},"report")),(0,n.kt)("td",{parentName:"tr",align:null},"Handle the reporting of a ",(0,n.kt)("code",null,"Result")," object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.validate"},"validate")),(0,n.kt)("td",{parentName:"tr",align:null},"A function called after a function/process is executed to determine if it was successful or not and report information using the user's previously defined configuration.")))),(0,n.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type Alias"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.capturefunction"},"CaptureFunction")),(0,n.kt)("td",{parentName:"tr",align:null},"The function definition for any implementations of ",(0,n.kt)("code",null,"capture"),". Custom user-defined methods should be sure to align with this.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.formatfunction"},"FormatFunction")),(0,n.kt)("td",{parentName:"tr",align:null},"The function definition for any implementations of ",(0,n.kt)("code",null,"format"),". Custom user-defined methods should be sure to align with this.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.logeventconfig"},"LogEventConfig")),(0,n.kt)("td",{parentName:"tr",align:null},"A type to represent a full log event sequence: - 1. A Result is returned from a function or process - 2. The Result is used to create (or format) a Report - 3. The Report is captured to help identify an issue or a more general event")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.logrightconfig"},"LogRightConfig")),(0,n.kt)("td",{parentName:"tr",align:null},"Specifications for the base level of configuration parameters log-right accepts")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.reportfunction"},"ReportFunction")),(0,n.kt)("td",{parentName:"tr",align:null},"The function definition for any implementations of ",(0,n.kt)("code",null,"Report"),". This function can be user-defined, and will be called when a specified result is called.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/log-right/docs/log-right.resultconfig"},"ResultConfig")),(0,n.kt)("td",{parentName:"tr",align:null},"Result object configuration parameters to be applied to a specific event type")))))}d.isMDXComponent=!0}}]);